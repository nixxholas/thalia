apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: thalia
  name: thalia
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: thalia
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: thalia
    spec:
      containers:
        - env:
            - name: AMQP_URL
              valueFrom:
                configMapKeyRef:
                  key: AMQP_URL
                  name: env
            - name: APPUSER_AMQP_URL
              valueFrom:
                configMapKeyRef:
                  key: APPUSER_AMQP_URL
                  name: env
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  key: ENVIRONMENT
                  name: env
            - name: MQ_EXCHANGE
              valueFrom:
                configMapKeyRef:
                  key: MQ_EXCHANGE
                  name: env
            - name: NICHOLASCHEN_AMQP_URL
              valueFrom:
                configMapKeyRef:
                  key: NICHOLASCHEN_AMQP_URL
                  name: env
            - name: NIXHOLAS_AMQP_URL
              valueFrom:
                configMapKeyRef:
                  key: NIXHOLAS_AMQP_URL
                  name: env
            - name: RUST_LOG
              valueFrom:
                configMapKeyRef:
                  key: RUST_LOG
                  name: env
            - name: SLACK_HOOK
              valueFrom:
                configMapKeyRef:
                  key: SLACK_HOOK
                  name: env
          image: ghcr.io/nixxholas/error_ms:latest
          name: thalia
          ports:
            - containerPort: 3000
          resources: {}
      restartPolicy: Always
      imagePullSecrets:
        - name: docker-gcr-creds
status: {}
